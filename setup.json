{
    "name": "aiida-sirius",
    "author": "Simon Pintarelli",
    "author_email": "simon.pintarelli@cscs.ch",
    "classifiers": [
        "License :: OSI Approved :: MIT License",
        "Programming Language :: Python :: 3.6",
        "Development Status :: 4 - Beta"
    ],
    "description": "AiiDA plugin for the SIRIUS library",
    "url": "https://github.com/simonpintarelli/aiida-sirius",
    "license": "MIT",
    "classifiers": [
        "Programming Language :: Python",
        "Intended Audience :: Science/Research",
        "License :: OSI Approved :: MIT License",
        "Natural Language :: English",
        "Framework :: AiiDA"
    ],
    "version": "0.1.0a0",
    "entry_points": {
        "aiida.data": [
            "sirius.scf = aiida_sirius.data:SiriusParameters",
            "sirius.py.nlcg = aiida_sirius.data.nlcg:NLCGParameters",
            "sirius.nlcg = aiida_sirius.data.nlcg:NLCGParameters",
            "sirius.md = aiida_sirius.data.md:SiriusMDParameters"
        ],
        "aiida.calculations": [
            "sirius.scf = aiida_sirius.calculations.scf_base:SiriusSCFCalculation",
            "sirius.py.nlcg = aiida_sirius.calculations.nlcg:NLCGCalculation",
            "sirius.nlcg = aiida_sirius.calculations.nlcg:NLCGCalculation",
            "sirius.cpp.nlcg = aiida_sirius.calculations.nlcg_cpp:NLCGCPPCalculation",
            "sirius.md = aiida_sirius.calculations.md:SiriusMDCalculation"
        ],
        "aiida.parsers": [
            "sirius.scf = aiida_sirius.parsers.scf:SiriusSCFParser",
            "sirius.py.nlcg = aiida_sirius.parsers.nlcg:NLCGParser",
            "sirius.nlcg = aiida_sirius.parsers.nlcg:NLCGParser",
            "sirius.cpp.nlcg = aiida_sirius.parsers.nlcg_cpp:NLCGCPPParser",
            "sirius.md = aiida_sirius.parsers.md:SiriusMDParser"
        ],
        "aiida.cmdline.data": [
            "sirius = aiida_sirius.cmd.cmd_sirius_parameters.py:siriusscf"
        ]
    },
    "include_package_data": true,
    "setup_requires": ["reentry"],
    "reentry_register": true,
    "install_requires": [
        "aiida-core>=1.0.0b4,<2.0.0",
        "six",
        "voluptuous",
        "PyYAML"
    ],
    "extras_require": {
        "testing": [
            "pgtest==1.2.0",
            "wheel>=0.31",
            "coverage",
            "pytest>=3.6.3,<5.0.0",
            "pytest-cov>=2.6.1,<5.0.0"
        ],
        "pre-commit": [
            "pre-commit==1.11.0",
            "yapf==0.27.0",
            "prospector==0.12.11",
            "pylint==1.9.4"
        ],
        "docs": [
            "sphinx"
        ]
    }
}
